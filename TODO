-*- mode: org -*-

* First Working Prototype, Novemeber 4th
** DONE Two snails (human vs. human)
*** DONE Keyboard map
** DONE One unlimited weapon
** DONE Take damage and die
*** DONE Snails have health which can be decreased
*** DONE Trigger event on death
** DONE Display health
*** DONE A meter that displays the hearts
*** DONE Create heart graphics
*** DONE Update health meter using snail's health level
** DONE Cactus generator
*** DONE Add cactus type
*** DONE Create the generator
** DONE Snail agnostic weapons
*** DONE Weapons have direction and position
** DONE Restrict window size

* First Alpha, December 16th
** TODO Orient bullet sprites correctly
** TODO Improve existing graphics
*** DONE Cactus graphics
*** DONE Second snail
*** TODO Make bullets more apparent
** TODO Sprite animations
*** TODO Shooting
*** TODO Getting hit
*** TODO Idle
** TODO Health bar animations (when low on health)
** TODO Improve collision detection
*** DONE Better-fitting collision areas
*** TODO More collision areas (body, helmet)
** TODO Blood splatter (particle system)
** TODO Extend arsenal with rocket launcher
*** TODO Create rocket projectile
**** TODO Graphics (the rocket + smoketrail [particle system])
**** TODO Physics
**** TODO Logic	(homing)
*** TODO A new weapon: rocket launcher
**** TODO Graphics for the weapon
**** TODO When out of rockets, switch to first weapon	 
** TODO Power-ups
*** TODO Rocket launcher (or additional rockets)
*** TODO Additional health	
** TODO Rounds (3 rounds per game)
** TODO Make bullet collision detection independent of game speed  
** TODO Helmets
*** Helmets protect against headshots? Should there be special damage for headshots?
*** TODO Helmets take x amount of damage until they expire	
** TODO Run on Windows
** TODO Destructible cactii

** TODO Shouldn't be possible to shoot when dead
   
* Major Beta, January 20th
** Helmets can detach from snail and then be picked-up again
** "Walker" power-up
** Collect feedback from first alpha
** Proper player input configuration
** AI
** Menu system
   
* Engine
** DONE Platform-independent rendering in components (not in the gfx subsystem)
** DONE Build: verify that TR1 can be used for smart pointers using a code test
** DONE Build: detect whether there are smart pointer implementations in std::
** DONE Implement new design regarding rendering context, renderers, meshes, etc.
** DONE Remove friend for Sprite, add sprite event handler.
** TODO Add correct event handling (multitargets)
** DONE Verify that smartptrs are implemented by boost   
** DONE Remove the old way of doing rendering
** DONE Implement SpriteCuller
** DONE Use Mesh and renderer, create a TextureRenderer
** TODO Add doxygen comments
** TODO Unit tests using Gtest
** TODO Create renderer factory with cache
** DONE Use environment variable to toggle rendering of geoms
** TODO Geom offset   
** TODO SDL support
** TODO ImageIO support
** TODO SDL_image support
** TODO Make CMake output more pretty (smart ptr detection, etc)
** TODO Fix design of physical geoms. it's borken
