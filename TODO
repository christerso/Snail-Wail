-*- mode: org -*-

* First Working Prototype, Novemeber 4th
** DONE Two snails (human vs. human)
*** DONE Keyboard map
** DONE One unlimited weapon
** DONE Take damage and die
*** DONE Snails have health which can be decreased
*** DONE Trigger event on death
** DONE Display health
*** DONE A meter that displays the hearts
*** DONE Create heart graphics
*** DONE Update health meter using snail's health level
** DONE Cactus generator
*** DONE Add cactus type
*** DONE Create the generator
** DONE Snail agnostic weapons
*** DONE Weapons have direction and position
** DONE Restrict window size

* First Alpha, December 16th
** TODO Orient bullet sprites correctly
** TODO Improve existing graphics
*** TODO Cactus graphics
*** TODO Second snail
*** TODO More visible bullets
** TODO Sprite animations
*** TODO Shooting
** TODO Health bar animations
** TODO Improve collision detection
*** TODO Smaller collision areas
*** TODO More collision areas
** TODO Blood splatter
** TODO Extend arsenal with rocket launcher
** TODO Power-ups
** TODO Rounds (3 rounds per game)
** TODO Improve bullet collision detection
** TODO Helmets
** TODO Run on Windows
** TODO Destructible cactii

* Major Beta, January 20th
** Collect feedback from first alpha
** Proper player input configuration
** AI
** Menu system
   
* Engine
** DONE Platform-independent rendering in components (not in the gfx subsystem)
** DONE Build: verify that TR1 can be used for smart pointers using a code test
** DONE Build: detect whether there are smart pointer implementations in std::
** DONE Implement new design regarding rendering context, renderers, meshes, etc.
** DONE Remove friend for Sprite, add sprite event handler.
** TODO Add correct event handling (multitargets)
** DONE Verify that smartptrs are implemented by boost   
** DONE Remove the old way of doing rendering
** DONE Implement SpriteCuller
** DONE Use Mesh and renderer, create a TextureRenderer
It should be easy to draw all the sprites visible, like graphics.render()
but it should also be easy to add custom stuff to the renderlists that are used in gfx_subsystem

** TODO Add doxygen comments
** TODO Unit tests using Gtest
   
