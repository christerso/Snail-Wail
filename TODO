===----------------------------------------------------------------*- org -*-===
                                      TODO
===--------------------------------------------------------------------------===

* First Working Prototype, Novemeber 4th
** DONE Two snails (human vs. human)
*** DONE Keyboard map
** DONE One unlimited weapon
** DONE Take damage and die
*** DONE Snails have health which can be decreased
*** DONE Trigger event on death
** DONE Display health
*** DONE A meter that displays the hearts
*** DONE Create heart graphics
*** DONE Update health meter using snail's health level
** DONE Cactus generator
*** DONE Add cactus type
*** DONE Create the generator
** DONE Snail agnostic weapons
*** DONE Weapons have direction and position
** DONE Restrict window size

* First Alpha, December 16th
** DONE Orient bullet sprites correctly
** DONE Improve existing graphics
*** DONE Cactus graphics
*** DONE Second snail
** TODO Sprite animations
*** TODO Shooting
*** TODO Getting hit
** TODO Health bar animations (when low on health)
** DONE Improve collision detection
*** DONE Better-fitting collision areas
*** DONE More collision areas (body, helmet)
** TODO Blood splatter (particle system)
** TODO Extend arsenal with rocket launcher
*** TODO Create rocket projectile
**** TODO Graphics (the rocket + smoketrail [particle system])
**** TODO Physics
**** TODO Logic	(homing)
*** TODO A new weapon: rocket launcher
**** TODO Graphics for the weapon
**** TODO When out of rockets, switch to first weapon	 
** TODO Power-ups
*** TODO Rocket launcher (or additional rockets)
*** TODO Replenish some of the health	
** DONE Helmets
*** DONE Helmets kill bullets and protect the snail   
*** DONE Add a small impulse to the player when its helmet is hit
*** DONE Helmets take x amount of damage until they expire	
** TODO Run on Windows
** TODO Destructible cactii
*** TODO New graphics
**** TODO A half cactus
**** TODO A stub
*** TODO Detect bullet collisions     
** TODO Shouldn't be possible to shoot when dead   
* Major Beta, January 20th
** The first weapon shouldn't fire rapidly
** Helmets can detach from snail and then be picked-up again
** Collect feedback from first alpha
** Proper player input configuration
*** Draw graphics for menu
*** Create menu    
** AI
** New power-ups
*** An "IQ booster" that improves the AI for a certain amount of time. Nothing happens to the player, though
*** The walker    
** Menu system   
** Rounds (3 rounds per game)
** Sprite animations
*** Idle animation
** Improve graphics    
* Engine
** DONE Platform-independent rendering in components (not in the gfx subsystem)
** DONE Build: verify that TR1 can be used for smart pointers using a code test
** DONE Build: detect whether there are smart pointer implementations in std::
** DONE Implement new design regarding rendering context, renderers, meshes, etc.
** DONE Remove friend for Sprite, add sprite event handler.
** TODO Add correct event handling (multitargets)
** DONE Verify that smartptrs are implemented by boost   
** DONE Remove the old way of doing rendering
** DONE Implement SpriteCuller
** DONE Use Mesh and renderer, create a TextureRenderer
** TODO Add doxygen comments
** TODO Unit tests using Gtest
** TODO Create renderer factory with cache
** DONE Use environment variable to toggle rendering of geoms
** DONE Geom offset   
** TODO SDL support
** TODO ImageIO support
** TODO SDL_image support
** TODO Make CMake output more pretty (smart ptr detection, etc)
** TODO Fix design of physical geoms. it's borken
** DONE AtlasSprite, setup a grid and select cell. put it in sprite
** DONE Geoms should have a priority
** TODO Finer collision areas for geoms (one big-pass, then a finer-grained pass customized by the geom)
** TODO Update the logic at a certain interval
** TODO Update next state instead of current state in logic, let graphics interpolate
** DONE Two sprites, one delegate of the other, shouldn't flicker when moving together
** TODO Should GraphicsContext really work by binding?   
** TODO Should event handling really need subclassing???
** TODO Pick sprite cell from orientation   
** TODO enqueueRender member functions are not that efficient, improve!
** DONE setPosition/setOrientation -> setReferenceFrame
** TODO Improve engine in general (file headers mostly)
** TODO Investigate whether an object should aggregate a coordsys instead of inherit
